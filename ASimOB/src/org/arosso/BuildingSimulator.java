/**
 * File generated from the model::BuildingSimulator uml Class
 * Generated by the Acceleo 3 <i>UML to Java</i> generator.
 */


import ;
import ;
import ;
import ;
import ;
import ;
// Start of user code (user defined imports)	

// End of user code

/**
 * Description of BuildingSimulator.
 */
public class BuildingSimulator {
    /**
     * Description of the property building.
     */
    public BuildingModel building = null;
    
    /**
     * Description of the property rutineManager.
     */
    public RoutineManager rutineManager = null;
    
    /**
     * Description of the property graphicManager.
     */
    public GraphicManager graphicManager = null;
    
    /**
     * Description of the property statisticsManager.
     */
    public StatisticsManager statisticsManager = null;
    
    /**
     * Description of the property guiController.
     */
    public GuiController guiController = null;
    
    /**
     * Description of the property jasperReportManager.
     */
    public JasperReportManager jasperReportManager = null;
    
    /**
     * Description of the property simTime.
     */
    public Object simTime = null;
    
    /**
     * Description of the property statisticsManager.
     */
    public StatisticsManager statisticsManager = null;
    
    // Start of user code (user defined attributes)
    
    // End of user code
    
    /**
     * The constructor.
     */
    public BuildingSimulator() {
    	// Start of user code constructor
    	super();
    	// End of user code
    }
    
    /**
     * Description of the method generateSummaryReport.
     */
    private void generateSummaryReport() {
    	// Start of user code for method generateSummaryReport
    	return generateSummaryReport;
    	// End of user code
    }
     
    /**
     * Description of the method updateStatistics.
     */
    private void updateStatistics() {
    	// Start of user code for method updateStatistics
    	return updateStatistics;
    	// End of user code
    }
     
    /**
     * Description of the method startSimulation.
     */
    public void startSimulation() {
    	// Start of user code for method startSimulation
    	return startSimulation;
    	// End of user code
    }
     
    /**
     * Description of the method pauseSimulation.
     */
    public void pauseSimulation() {
    	// Start of user code for method pauseSimulation
    	return pauseSimulation;
    	// End of user code
    }
     
    /**
     * Description of the method stopSimulation.
     */
    public void stopSimulation() {
    	// Start of user code for method stopSimulation
    	return stopSimulation;
    	// End of user code
    }
     
    /**
     * Description of the method openSimulationConfig.
     */
    public void openSimulationConfig() {
    	// Start of user code for method openSimulationConfig
    	return openSimulationConfig;
    	// End of user code
    }
     
    /**
     * Description of the method addElevatorCall.
     */
    public void addElevatorCall() {
    	// Start of user code for method addElevatorCall
    	return addElevatorCall;
    	// End of user code
    }
     
    /**
     * Description of the method Operation1.
     */
    public void Operation1() {
    	// Start of user code for method Operation1
    	return Operation1;
    	// End of user code
    }
     
    // Start of user code (user defined methods)
    
    // End of user code
    
    /**
     * Returns building.
     * @return building 
     */
    public BuildingModel getBuilding() {
    	return this.building;
    }
    
    /**
     * Sets a value to attribute building. 
     * @param newBuilding 
     */
    public void setBuilding(BuildingModel newBuilding) {
        this.building = newBuilding;
    }
    
    /**
     * Returns rutineManager.
     * @return rutineManager 
     */
    public RoutineManager getRutineManager() {
    	return this.rutineManager;
    }
    
    /**
     * Sets a value to attribute rutineManager. 
     * @param newRutineManager 
     */
    public void setRutineManager(RoutineManager newRutineManager) {
        this.rutineManager = newRutineManager;
    }
    
    /**
     * Returns graphicManager.
     * @return graphicManager 
     */
    public GraphicManager getGraphicManager() {
    	return this.graphicManager;
    }
    
    /**
     * Sets a value to attribute graphicManager. 
     * @param newGraphicManager 
     */
    public void setGraphicManager(GraphicManager newGraphicManager) {
        this.graphicManager = newGraphicManager;
    }
    
    /**
     * Returns statisticsManager.
     * @return statisticsManager 
     */
    public StatisticsManager getStatisticsManager() {
    	return this.statisticsManager;
    }
    
    /**
     * Sets a value to attribute statisticsManager. 
     * @param newStatisticsManager 
     */
    public void setStatisticsManager(StatisticsManager newStatisticsManager) {
        this.statisticsManager = newStatisticsManager;
    }
    
    /**
     * Returns guiController.
     * @return guiController 
     */
    public GuiController getGuiController() {
    	return this.guiController;
    }
    
    /**
     * Sets a value to attribute guiController. 
     * @param newGuiController 
     */
    public void setGuiController(GuiController newGuiController) {
        this.guiController = newGuiController;
    }
    
    /**
     * Returns jasperReportManager.
     * @return jasperReportManager 
     */
    public JasperReportManager getJasperReportManager() {
    	return this.jasperReportManager;
    }
    
    /**
     * Sets a value to attribute jasperReportManager. 
     * @param newJasperReportManager 
     */
    public void setJasperReportManager(JasperReportManager newJasperReportManager) {
        this.jasperReportManager = newJasperReportManager;
    }
    
    /**
     * Returns simTime.
     * @return simTime 
     */
    public Object getSimTime() {
    	return this.simTime;
    }
    
    /**
     * Sets a value to attribute simTime. 
     * @param newSimTime 
     */
    public void setSimTime(Object newSimTime) {
        this.simTime = newSimTime;
    }
    
    /**
     * Returns statisticsManager.
     * @return statisticsManager 
     */
    public StatisticsManager getStatisticsManager() {
    	return this.statisticsManager;
    }
    
    /**
     * Sets a value to attribute statisticsManager. 
     * @param newStatisticsManager 
     */
    public void setStatisticsManager(StatisticsManager newStatisticsManager) {
        this.statisticsManager = newStatisticsManager;
    }
    
    
}
